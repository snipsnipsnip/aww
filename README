CoffeeScriptのC版が作りたいなあ
ということでとりあえずAlgorithm Wを作ってみることにした
タイプクラスとかはとりあえずいらないよね？C言語の高階型って配列とポインタとconstくらいだし

よく考えると自動変換と可変長引数の扱いがやっかいだな
ocamlみたく自動変換はナシにしようか
Cのサブセットを使うことになるのだろうが、どうサブセットを選べばいいのやら
僕の普段書く感じだとこのくらいあれば十分なんだけど

basic types = int | char | long | float | double
            | unsigned int | unsigned char | unsigned long
rank-1 types = const 'a | pointer 'a | array 'a

折角だからenumも強化してあげたいな

モジュール化のあたりまで手を出しだすとどんどんコンベンションが増えてウザくなるな
CoffeeScriptはクラスは用意してるものの、全然使わなくてもシンタックスシュガーだけで十分便利に使える
JavaScriptが自力で相当機能豊富だからってのもあるんだけど

でもC++捨てることになるからやっぱジェネリックは欲しいなあ
タイプクラスとか入れていくとどんどん俺言語化していくな

目的は「CoffeeScriptがJavaScriptにやったことをCに対してやる」ことであって、「CoffeeScriptをC言語に翻訳すること」ではない
見た目までCoffeeScriptに似ている必要はない
変換前と変換後が一対一対応していることが本質
なので、->を使った文法にするのはやめた
C言語に直接対応するキーワードがないからだ

目指す形は実装が簡単そうな順にいうとこうなる

  1. ；がオプショナル
  2. ｛｝がオプショナル
  3. 型宣言がオプショナル
  4. 変数宣言がオプショナル

以下自問自答

Q. ガベージコレクタは？
A. ない

Q. クラスは？
A. ない

Q. ジェネリックは？
A. ない

Q. C++は？
A. パーサが許容できるように努力するが、構文糖を加えることはしない

Q. Objective-Cは？
A. パーサが許容できるように努力するが、構文糖を加えることはしない

Q. プリプロセッサは？
A. パーサが許容できるように努力するが、構文糖を加えることはしない
